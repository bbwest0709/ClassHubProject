<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.classhubproject.mapper.order.OrderMapper">

    <!-- 주문 정보 추가 -->
    <insert id="insertOrder" parameterType="orderResponse">
        INSERT INTO Orders (user_id, total_price)
        VALUES (#{userId}, #{totalPrice})
    </insert>

    <!-- 특정 회원의 가장 최근 생성된 orders_id 찾기 -->
    <select id="getOrdersIdByUserId" resultType="int">
        SELECT orders_id
        FROM Orders
        WHERE user_id = #{userId}
        ORDER BY regdate DESC LIMIT 1
    </select>

    <!-- 주문 상세 건수 조회-->
    <select id="getOrderDetailCountByOrdersId" resultType="int">
        SELECT COUNT(*)
        FROM Order_Detail
        WHERE orders_id = #{ordersId}
    </select>

    <!-- 주문 상세 추가-->
    <insert id="insertOrderDetail" parameterType="orderRequest">
        INSERT INTO Order_Detail (orders_id, class_id)
        VALUES (#{ordersId}, #{classId})
    </insert>

    <!-- 특정 사용자의 전체 주문 목록 -->
    <select id="getOrderList" resultType="orderResponse">
        SELECT *
        FROM Orders
        WHERE user_id = #{userId} AND final_order_status != 0
    </select>

    <resultMap id="OrderDetailWithClassResultMap" type="orderDetailResponse">
        <id property="orderDetailId" column="order_detail_id"/>
        <result property="ordersId" column="orders_id"/>
        <result property="classId" column="class_id"/>

        <association property="classResponseDTO" resultMap="ClassResponseResultMap"/>
    </resultMap>

    <resultMap id="ClassResponseResultMap" type="classResponse">
        <id property="classId" column="class_id"/>
        <result property="instructorsId" column="instructors_id"/>
        <result property="className" column="class_name"/>
        <result property="description" column="description"/>
        <result property="summary" column="summary"/>
        <result property="price" column="price"/>
        <result property="thumnail" column="thumnail"/>
        <result property="totalVideoLength" column="total_video_length"/>
        <result property="regdate" column="regdate"/>
        <result property="editDate" column="edit_date"/>

        <association property="categoryResponseDTO" javaType="categoryResponse">
            <result property="categoryId" column="category_id"/>
            <result property="categoryName" column="category_name"/>
        </association>

        <association property="instructorsResponseDTO" javaType="instructorResponse">
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <!-- 특정 주문의 상세 목록 조회 -->
    <select id="getOrderDetailList" resultMap="OrderDetailWithClassResultMap">
        SELECT od.*, c.*, i.*
        FROM Order_Detail od
                 JOIN Class c ON od.class_id = c.class_id
                 JOIN Instructors AS i ON c.instructors_id = i.instructors_id
        WHERE orders_id = #{ordersId}
    </select>

    <!-- 주문 번호로 강의명 1건 조회 -->
    <select id="getClassNameByOrdersId" resultType="String">
        SELECT c.class_name
        FROM Order_Detail od
                 JOIN Class c ON od.class_id = c.class_id
        WHERE od.orders_id = #{ordersId} LIMIT 1
    </select>

    <!-- 이미 보유한 강의인지 확인 -->
    <select id="checkHoldClass" resultType="boolean">
        SELECT EXISTS(SELECT 1
                      FROM Orders o
                               JOIN Order_Detail od ON o.orders_id = od.orders_id
                      WHERE o.final_order_status = 1
                        AND od.class_id = #{classId}
                        AND o.user_id = #{userId})
    </select>

    <!-- 진행중인 주문에서 강의 개별 삭제 -->
    <delete id="deleteInProgressOrderByClassId" parameterType="orderRequest">
        DELETE od
        FROM Order_Detail od
               JOIN Orders o ON od.orders_id = o.orders_id
        WHERE od.class_id = #{classId} AND o.final_order_status = 0
    </delete>

    <!-- 주문 완료-->
    <update id="completedOrder" parameterType="orderRequest">
        UPDATE Orders
        SET final_order_status = 1
        WHERE orders_id = #{ordersId}
    </update>

    <!-- 주문 취소 -->
    <update id="cancelOrder" parameterType="orderRequest">
        UPDATE Orders
        SET final_order_status = 2
        WHERE orders_id = #{ordersId}
    </update>

    <!-- 특정 주문ID의 총 주문 금액 가져오기 -->
    <select id="getTotalPriceByOrdersId" resultType="int">
        SELECT total_price
        FROM Orders
        WHERE orders_id = #{ordersId}
    </select>

    <!-- 진행중인 주문 목록 조회 -->
    <select id="getInProgressOrderList" resultMap="OrderDetailWithClassResultMap">
        SELECT od.*, c.class_name, c.price
        FROM Order_Detail od
                 JOIN Class c ON od.class_id = c.class_id
                 JOIN Orders o ON od.orders_id = o.orders_id
        WHERE o.orders_id = #{ordersId}
          AND o.final_order_status = 0
          AND o.user_id = #{userId}
    </select>

    <!-- 취소 후 주문 금액 업데이트 -->
    <update id="updateTotalPrice" parameterType="orderRequest">
        UPDATE Orders
        SET total_price = #{totalPrice}
        WHERE orders_id = #{ordersId}
    </update>

    <!-- 진행중인 주문 목록에 강의가 1건도 없을 시 해당 주문 정보 삭제 -->
    <delete id="deleteOrder" parameterType="orderRequest">
        DELETE
        FROM Orders
        WHERE orders_id = #{ordersId}
    </delete>

    <!-- 특정 주문 ID에 해당하는 주문 상세의 강의 ID 조회 -->
    <select id="getClassIdByOrdersId" resultType="int">
        SELECT class_id
        FROM Order_Detail
        WHERE orders_id = #{ordersId}
    </select>


</mapper>